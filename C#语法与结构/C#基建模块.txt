c# 基建模块
	C#文档描述：
		1、Garbage Collection
		2、Nullable Types守护变量
		3、Exception handling：用于提供结构体和扩展方式用于检测错误和恢复
		4、Lambda表达式支持函数规划技术
		5、Language Integrated Query(LINQ)语法创建了通用团用于从any source获取数据
		6、asyncchronous operations提供了构建分布系统的语法
		7、C#提供了自定义reference types和value types：
		8、所有的C#类型，包括int/double类型，都是继承于object类型；
		9、C#使得对象的动态分配和轻量结构的in-line存储；
		10、自定义迭代器：
	.Net 架构：虚拟运行系统(common language runtime:CLR)
		语言的互操作性是.Net的重要特征；C#转换为Common Type Specification(CTS)；

1、程序构建模块、主要语言区域、语言策略
	常量、字段、方法、属性、索引器、事件、运算符、构造函数、终结器、类型
	protected internal: 仅可方位此类、从此类中派生的类，或者同一程序集中的类
2、程序结构基础：程序结构、类型系统、面向对象的编程、功能技术、异常和错误、编码样式{Pascal大小写 // 常见c#代码约定}、
3、c#12 / c#11 / c#10：新增功能 - 字符串内插
4、语言集成查询(LINQ)：创建应用程序、创建数据集、操作顺序、比较、优化
4、异步编程场景：：异步编程、任务异步编程、异步返回、异步文件访问、生成和使用异步流
5、c#概念：引用空引用类型、可以为null的引用迁移、方法、属性、索引器、迭代器、委托和事件、版本控制
6、操作指南c#文章
7、高级主题
8、.Net Compiler platform SDK(Roslyn API)
9、c#编程指南：：文章索引、将字符串拆分为子字符串、连接字符串、搜索字符串、修改字符串、比较字符串、捕捉非CLS异常：
10、高级主题：反射和属性、接口实现、
11、.NET compiler platform SDK（Roslyn API） 
12、c#编程指南：编程概念、语句|表达式和相等性、类型、类|结构和记录、接口、委托、字符串、索引器、事件、泛型
13、操作指南c#文章
14、高级主题：反射和属性、接口实现、表达式树、本机互操作性、性能工程{ref safety功能保留语义并最大程度地减少额外地复制，减少内存分配；}、
15、基本编码组件
16、运行时库

网络请求：
	超时 + 请求
