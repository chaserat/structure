#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.80                        #
#------------------------------------------------------------------------------#

WRKDIR = `pwd`


CC = gcc
CXX = g++
F77 = f77
F9X = gfortran
LD = g++
AR = ar
RANLIB = ranlib
WINDRES = windres

INC = -I./glad/include -I./glad/include
CFLAGS = -std=c++11 -Wall
RESINC = 
RCFLAGS = 
LIBDIR = 
LIB = -lglfw -lGLU -lGL -lm
LDFLAGS =

INC_RELEASE = $(INC)
CFLAGS_RELEASE = $(CFLAGS) -O2
RESINC_RELEASE = $(RESINC)
RCFLAGS_RELEASE = $(RCFLAGS)
LIBDIR_RELEASE = $(LIBDIR)
LIB_RELEASE = $(LIB)
LDFLAGS_RELEASE = $(LDFLAGS)
OBJDIR_RELEASE = objs
DEP_RELEASE = 
OUT_RELEASE = ../bin/torusShader

OBJ_RELEASE = $(OBJDIR_RELEASE)/glad.o $(OBJDIR_RELEASE)/Matrices.o $(OBJDIR_RELEASE)/lodepng.o $(OBJDIR_RELEASE)/Png.o $(OBJDIR_RELEASE)/Timer.o $(OBJDIR_RELEASE)/Tokenizer.o $(OBJDIR_RELEASE)/BitmapFontData.o $(OBJDIR_RELEASE)/Torus.o $(OBJDIR_RELEASE)/main.o

all: release

clean: clean_release

before_release: 
	test -d ../bin || mkdir -p ../bin
	test -d $(OBJDIR_RELEASE) || mkdir -p $(OBJDIR_RELEASE)

after_release: 

release: before_release out_release after_release

out_release: before_release $(OBJ_RELEASE) $(DEP_RELEASE)
	$(LD) $(LIBDIR_RELEASE) -o $(OUT_RELEASE) $(OBJ_RELEASE)  $(LDFLAGS_RELEASE) $(LIB_RELEASE)

$(OBJDIR_RELEASE)/glad.o: glad/src/glad.c
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c glad/src/glad.c -o $(OBJDIR_RELEASE)/glad.o

$(OBJDIR_RELEASE)/Matrices.o: Matrices.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Matrices.cpp -o $(OBJDIR_RELEASE)/Matrices.o

$(OBJDIR_RELEASE)/lodepng.o: lodepng.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c lodepng.cpp -o $(OBJDIR_RELEASE)/lodepng.o

$(OBJDIR_RELEASE)/Png.o: Png.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Png.cpp -o $(OBJDIR_RELEASE)/Png.o

$(OBJDIR_RELEASE)/Timer.o: Timer.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Timer.cpp -o $(OBJDIR_RELEASE)/Timer.o

$(OBJDIR_RELEASE)/Tokenizer.o: Tokenizer.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Tokenizer.cpp -o $(OBJDIR_RELEASE)/Tokenizer.o

$(OBJDIR_RELEASE)/BitmapFontData.o: BitmapFontData.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c BitmapFontData.cpp -o $(OBJDIR_RELEASE)/BitmapFontData.o

$(OBJDIR_RELEASE)/Torus.o: Torus.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Torus.cpp -o $(OBJDIR_RELEASE)/Torus.o

$(OBJDIR_RELEASE)/main.o: main.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c main.cpp -o $(OBJDIR_RELEASE)/main.o

clean_release: 
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	rm -rf $(OBJDIR_RELEASE)

.PHONY: before_release after_release clean_release

