		设计视觉渲染和图形效果：
渲染相关的美术工具和流程：
	跟轴点绘制工具
	渲染目标
渲染的通用功能
	渲染组件
		大气雾组件{衰减高度、指数高度雾组件{用于创建雾效果，但密度与雾的高度相关}、广告牌组件、
		材质广告牌组件、自定义网格体组件、姿态网格体组件、贴花组件、实例化静态网格体组件、粒子系统组件、
		后期处理组件、场景捕获2D组件、场景捕获立方体组件、样条线网格体组件、文本渲染组件、}
	骨骼网络体渲染路径
		如何渲染骨骼网络体
		分段和数据块
		8位和16位骨骼索引
		每个分段的最大骨骼数量
		GPU蒙皮顶点工厂
		启用无限制骨骼影响模式
		设置骨骼影响限制
		皮肤缓存系统：Skin Cache{Compute Shader}、结果会缓存在顶点缓冲区中，传递到LocalVertexFactory进行渲染；
		光线追踪和毛发发束缓存渲染要求：硬件光线追踪和毛发发束渲染(working with content/hair)等渲染功能愮皮肤缓存路径才能渲染；
		重新计算切线{三角通道、顶点通道:::全局设置[重新计算切线、在分段上启用切线的骨骼网络体上重新计算切线]}
		调试皮肤缓存的提示
		概述可视化
		内存可视化
		RayTracingLODOffset可视化：将显示光线追踪皮肤缓存条目和栅格皮肤缓存条目间的LOD索引项目，这在光追中使用的LOD不同于栅格化所用LOD时很有用；
		变形器图标插件
后期处理效果{后期处理体积、镜头、景深、泛光、曝光和局部曝光、色差、脏污遮罩、摄像机、镜头光晕、图像效果[暗角效果、颜色分级和色调调试器、胶片、全局光照、Lumen全局光照、屏幕空间全局光照、光线追踪全局光照、反射、Lumen反射、屏幕空间反射{强度、质量、最大粗糙度}、光线追踪反射、渲染功能{后期处理材质、环境立方体贴图、环境光遮蔽、光线追踪环境光遮蔽、动态模糊、光线追踪半透明、路径追踪、胶片颗粒、}、]}
	可混合物
		可混合物：资产的属性可与其他可混合物进行平滑插值：将任意数据混合到部分最终数据；子系统可拾取画面中的数据并影响渲染；
		可混合物{IBlendableInterface对象，由这些资产类型实现----PostprocessMaterials,PorstprocessMaterialInstances,LightPropagationVolumeBlendable}
		可混合物容器存在PostProcessSettings中，对象中:PostProcessVolume,PostProcessComponent,SceneCaptureActor,CameraComponent
		可混合物在包中、作为对象(如体积域)的部分、或在蓝图中动态创建
		如何自行创建可混合物(在C++中)
		蓝图
	泛光(https://docs.unrealengine.com/5.3/zh-CN/bloom-in-unreal-engine/)
		较为适度的渲染性能成本极大地增加渲染图像的真实感；
		强度、阈值、着色、尺寸
		泛光卷积
		内核图像最佳实现：{无MipGen，Never Stream}
	颜色分级和胶片色调映射器
		色调映射：
		ACES胶片色调映射器{不同的地方是泛光和曝光度}
		物理更正自发光和泛光{自发光率的增大，颜色会变浅，类似于彩色光在真实世界中的工作原理}
		曝光度：在物理上是正确的，因此颜色仍保持其原有的形状，而不是失去细节；该示例中，有多种颜色和材质类型以及不同的粗糙度和金属感；
		胶片设置、颜色校正[颜色校正属性、]、优秀颜色校正的工作流、{高动态范围显示输出{ACES确保所用源材质----ACES Viewing Transform：Look Modification Transform,Reference Rendering Transform,Output Device Transform}、使用查找表[LUT]进行颜色校正}
		启用HDR输出{LDR、HDR} 
		{https://www.oscars.org/science-technology/sci-tech-projects/aces;https://docs.acescentral.com/}
		使用LUT进行颜色校正{利用查找表来实现后期处理体积的颜色矫正，不要使用三个一维查找表，可提供更精细的色彩变换，从而可用于去饱和度之类的用途}
		使用LUT纹理，创建自己的LUT纹理；
			已知：LUT发生在LDR中，以及sRGB空间中输出到显示器的最终图像颜色上，不同于HDR：Color Grading颜色校正工具来取代LUT
				 LUT可能是你当前显示器上项目快速定位特定外观的好方法，后期处理体积的颜色分级(Color Grading)部分下的颜色校正属性进行最终调整
				 使用LUT会损失一致性，因为发生的任何颜色矫正都不适用于HDR显示；
	景深：使用编辑器工具来模拟近处和远处之间的距离，以便模拟对焦和失焦效果；
		DOF基于距离对焦点前后的场景应用模糊处理，吸引观察者效果；
		景深类型：影片和移动----过场动画景深，移动平台景深方法
		景深实现：近景，远景，对焦区域；它们与非模糊的场景相融合，以获得最终效果；
		在焦区域内的物体(黑色)使用非模糊场景层，近景和远景物体被完全混合到模糊层中，意味着它们处于失焦状态；
		过渡区域内的物体，根据其在对焦区域的过渡区域内的位置，在非模糊景层(近景，远景)与模糊层之间线性混合；
		可视化景深：显示->可视化->景深层显示标签来可视化；
		使用过程动画摄像机的调试对焦平面；
	自动曝光：
		后期处理体积(post process volume)提供自动曝光{曝光测光模式，直方图和基本算法，手动算法，曝光补偿曲线，曝光测光遮罩，曝光更改速度和移动}
		使用加速和减速参数
		扩展EV100的默认亮度范围{最大亮度和最小亮度，直方图对数最小值，直方图对数最大值}
		预曝光----手动设置
		可视化和调试：：：：提供当前场景视图中测得曝光值的直方图表示，快速引用后期处理体积和曲线资产中设置的值；
		直方图
		直方图调试可视化模式
	Panini投影
		3D投影，可修复透视投影在宽视野画面两侧出现的几何失真{透视投影[出现几何失真、非透视投影、直线、中央模糊]}
	后期处理材质
		后期处理图表、使用后期处理材质、混合不同的材质实例、使用GBuffer属性、时间抗锯齿或为何GBuffer抖动、UV和ScreenPosition、过滤纹理查找、
		替换色调映射器、已知问题{材质表达式、材质、混合}；
		常见问题{
			后期处理要消耗多少内存：取决于屏幕分辨率
			如何降低后处理渲染成本：在目标平台上进行测量，保持纹理查找计数较低，执行较少的数学计算，减少依赖性纹理查找，避免随机纹理查找{由于纹理缓存未名中而变得更慢}
			通道会增加性能成本---------
			混合所需的性能成本很低，所有材质实例属性都会混合，只需渲染一个使用这些设置的后期处理材质通道；
			使用“色调映射器前”来获取适当的时间抗锯齿"TemporalAA",当我使用一种颜色，他会经过色调映射，看起来不同；
			如何得到后期处理图标的完整存储：
		}
优化和调试实时渲染项目
	工具：：
	实时渲染指南(https://docs.unrealengine.com/5.3/zh-CN/guidelines-for-optimizing-rendering-for-real-time-in-unreal-engine/)
	渲染管线优化：部分优化会直接影响到虚幻引擎所用的渲染管线，可改善项目的整体性能；
		前向着色器渲染
		屏幕百分比与时序上采样
		动态分辨率
		配置文件和扩展性优化
			配置文件
			命令行参数
			抗锯齿和上采样
			光追性能指南
			硬件光追的建议和技巧
			可扩展性和开发人员
			可延展参考
			Stat命令
	资产优化：
		Nanite虚拟几何体
		可视性和遮挡剔除
		纹理流送
		虚拟纹理
		HLOD
		创建并使用LOD
		根据平台设置LOD
		为静态网格体自动生成LOD
		代理几何工具
	调试和性能分析工具
		使用RenderDoc分析虚幻引擎画面
		Unreal Insights
		GPU转储文件查看器工具
		渲染资源查看器
		CPU性能分析
		GPU分析
	抗锯齿和上采样
		时间超级分辨率
		时序上采样器
	动态分辨率
	如何修复GPU驱动程序崩溃
	前向着色渲染器
	GPU转储文件查看器
	Nanite虚拟几何体
	实时渲染优化指南
	使用RenderDoc分析虚幻引擎画面
	渲染资源查看器
	可扩展性
		可扩展性和开发人员
		可扩展参考
	屏幕百分比与时序上采样
	纹理流送
	虚拟纹理
	可视性和遮挡剔除
图形编程
	FShaderCache
	网络体绘制管道
		虚幻引擎4.22的网络体绘制管道转换指南
	图形编程介绍
	并行渲染介绍
	渲染依赖图
	着色器开发
		虚幻中添加全局着色器
		HLSL交叉编译器
		调试着色器编译过程
		着色器调试工作流程
	异步计数
	插件中的Shader
	新建全局着色器并作为插件
	线程渲染
纹理
	纹理编辑器界面
	支持的纹理格式和设置
第三方渲染工具和插件
	GPU调试工具NVIDIA Nsight Aftermath
	NVIDIA SLI交替帧渲染
材质
	材质的基本概念
		材质数据类型、材质中的数据处理和运算
	基于物理的材质{https://docs.unrealengine.com/5.3/zh-CN/physically-based-materials-in-unreal-engine/}
		基础颜色、粗糙度{映射粗糙度、粗糙度与高光度}、金属感{映射金属感}、高光度、空腔贴图、
	材质属性
		主材质节点：{材质能实现哪些效果、材质如何与光线交互、如何与背后的像素混合}
		物理材质：
			物理材质 & 物理材质遮罩
		半透明/高级半透明属性
	材质{材质或高级材质属性、物理材质遮罩、Nanite覆盖材质、半透明度{屏幕空间反射、接触阴影、光照模式、定向光源强度、应用雾化、逐像素计算雾、输出速度}
		高级半透明属性-半透明自投影
	材质输入
	材质编辑器参考
		材质编辑器UI、放置材质表达式和函数、使用主材质节点、预览和应用材质、整理材质图表
	实例化材质
		材质实例化是一种更改材质外观同时避免材质重新编译的方法；
		材质继承：层级父子关系----
		材质参数化：参数的创建和材质编辑器中所有的其他数据节点一样，并且包含与非参数化版本相同的信息
		参数类型|标量参数|向量参数|纹理参数|静态参数|
		常量和动态实例|常量材质实例|动态材质实例|
	材质函数
		材质函数允许你将材质图标的一部分打包成可复用的资产，分享到一个函数库中，并轻松插入到其他材质中，旨在让你能快速访问一些常用材质网络，实现简化材质创建；
		材质函数允许你将复杂的材质逻辑抽象成一个节点，使美术师更容易创建材质；
		材质函数概述 & 创建和使用材质函数
			{创建材质函数、}
		枢轴点绘制工具1.0-2.0材质函数
			PivotPainter2FoliageShader：材质函数包含纹理和数值参数，这些参数应加以修改以适合特定资源
			PivotPainter2FoliageSHader工作流：对于此特定函数，可以访问材质函数已经设置好的关于风吹和湍流的参数{
				输入：材质属性，枢轴绘制其纹理坐标
				输出：具有世界场景法线的最终材质，修改世界场景空间法线组件，世界场景位置偏移组件
			}
			ms_PivotPainter2_CalculateMeshElementIndex:从模型的UV中提取模型的元素ID
			ms_PivotPainter2_Decode8BitAlphaAxisExtent:从枢轴绘制其重新缩放到世界场景空间数据中
			ms_PivotPainter2_DecodeAxisVector：将枢轴绘制其的局部空间矢量信息转换为世界场景空间矢量
			ms_PivotPainter2_DecodePosition:将枢轴绘制其的局部空间信息转化为世界场景位置信息
			ms_PivotPainter2_ReturnParentTextureInfo：纹理数据读取父级子对象的纹理数据
			ms_PivotPainter2_UnpackIntegerAsFloat：此材质函数对枢轴绘制其的整数视为浮点数纹理数据进行解码
			渲染目标：
				1、枢轴点绘制工具：枢轴点绘制工具的引导页面
				2、渲染目标：使用蓝图工具保存高分辨率屏幕截图，将结果保存为纹理
		混合材质函数
			混合函数{Blend_ColorBurn,Blend_ColorDodge,Blend_Darken,Blend_Difference,Blend_Exclusion,Blend_HardLight,Blend_Lighten,
			Blend_LinearBurn,Blend_LinearDodge,Blend_LinearLight,Blend_Overlay,Blend_PinLight,Blend_Screen,Blend_SoftLight}
		渐变材质函数
			渐变函数：以程序方式生成根据纹理坐标表达式产生的渐变，与创建基于纹理的渐变相比，这些函数可节省内存；{指数径向渐变，菱形渐变，线性渐变，
			平滑曲线，值阶}
		图像调整材质函数：
			图像调整函数{3ColorBlend，CheapContrast，CheapContrast_RGB，SCurve，3PointLevels，HueShift[色调改变]，SmoothThreshold，}
		数学材质函数
			分量相加，Pi(pie),LinearSine[线性正弦],VectorToRadialValue,
		杂项材质函数
			TimeWithSpeedVariable(具有速度变量的时间)
			OffsetAndScaleTo1（偏移并调整比例到1）
			PassThrough（直接传送）
			SplitComponent(拆分分量)
			Flipbook(图像序列)
		不透明度材质函数
			不透明度函数、SoftOpacity(软不透明度)、
		例子材质函数
			粒子函数(3dParticleOpacity,)
		程序化材质函数
			GeneratedBand（生成的色带），GeneratedOffsetBands(生成的偏移色带)，NormalFromHeightmap(根据高度贴图建立法线贴图)，
			NormalFromHeightmapChaos(根据高度贴图建立混乱法线贴图)，
		反射材质函数
			反射函数{ViewAlignedReflection,WorldAlignedReflection,CustomReflectionVector}
			明暗处理材质
		明暗处理材质
			FuzzyShading,FuzzyShadingGrass,
		纹理材质函数
			CylindricalUVs，DetailTexturing，LocalAlignedTexture，ZWorldSpaceFlow，TextureCropping，WorldAlignedNormal，WorldAlignedTexture，
			3DSandMayaUVCoordinates，CustomRotator，HeightLerp，CameraWorldBlend，LocalSpaceSurfaceMirroring，SubUV_Function，TwoSidedTexturing，
			WorldCoordinate3Way，
		向量运算材质函数
			Fresnel(菲涅尔)、
		世界位置偏移函数
			WorldPositionOffset函数：{SimpleGrassWind,SplineThicken,CameraOffset,ObjectPivotPoint,ObjectScale,PivotAxis,
			RotateAboutWorldAxis_cheap,StaticMeshMorphTargets,Wind}
	贴花材质
		贴花材质：可将材质的特征投射到关卡中的几何体上，从而对场景做出局部修改，包括使用贴花Actor或贴花网格体直接投射到静态和骨骼网格体；
		材质域：延迟贴花：贴花Actor，网格体贴花{贴画材质可以直接应用于静态和骨骼网络体，以充当自定义贴花}
		贴花属性用法：
			Actor接收贴花，贴花响应，排序，DBuffer材质表达式{仅支持半透明和Alpha复合混合模式----在添加到接收材质的逻辑时允许自定义混合逻辑}
			DBuffer纹理：
			ApplyDBuffer材质函数：可用于将DBuffer材质表达式直接应用于材质属性，复制DBuffer贴花响应属性自动应用的逻辑
		重现旧版行为：利用DBuffer材质表达式，近似创建UE4中的旧版贴花混合模式；
			性能影响：在贴花的渲染开销中，屏幕覆盖范围和材质复杂性是最大的因素，在渲染其他材质时，也是如此；只要控制这两个因素，就可同时渲染多个贴花，不对性能造成太大冲击；
			其他信息和限制{
				法线重新投射，染色混合模式，贴花自发光和环境光遮蔽输入
			}
	分层材质
		不同表面类型之间创建复杂的混合效果，在单个网络体的不同区域上应用不同的材质属性，虽然可用纹理这招和其他基于像素的逻辑：：：：编辑流程
		分层的两个工作流：创建分层材质{
			Simple Chrome、
			Chrome Material Network、
			Simple Snow、
			Snow Layer Network、
			Layered Material、
			Instancing a layered material
		}，
		使用材质图层{
			使用input pin到材质属性Layers,
			编译利用材质实例化的复杂分层及混合材质，
			分层材质工作流：减少了定制分层材质所需的计数和时间，从而带来更多的迭代用户体验；{https://docs.unrealengine.com/5.3/zh-CN/using-material-layers-in-unreal-engine/}
			主要优点：创建非常复杂的材质；材质图层资产中设置的参数都可自行实例化；----材质图层混合资产，在材质图层资产中完成逻辑的
			大部分设置意味着对材质做出或大或小的更改时，能减少管理的复杂度；意味着多个材质之间使用相似的材质图层而无需重复工作；
			图层，图层混合资产：材质图层资产类型{材质图层资产；材质图层混合资产；基础材质图表；材质图层表达式；材质、图层和混合实例化；[传递参数、图层堆栈：https://docs.unrealengine.com/5.3/zh-CN/using-material-layers-in-unreal-engine/]}
		}
	材质表达式参考
		大气表达式
			AtmosphericFogColor: 大气雾颜色，让材质逐渐融入远方的雾颜色时非常有用；
		颜色材质表达式
			对颜色输入执行操作的表达式
			去饱和度(Desaturation)表达式对其输入进行去饱和，根据特定百分比将其输入的颜色转换为灰色阴影：：亮度系数，小数
		常量材质表达式
			Constant[常量]，Constant2Vector[常量2矢量，表达式输出双通道矢量值，输出两个常量数值]，Constant4Vector[常量4矢量]，DistanceCullFade(距离剔除消退)，
			粒子颜色[插入到适当的信道]，粒子方向[逐个粒子输出Vector3]，粒子动态模糊淡出，粒子半径，粒子相对时间，粒子大小，粒子速度，PerInstanceFadeAmount[按实例消退量],
			PerInstanceRandom[按实例随机]{静态网格实例输出不同的随机浮点值}，Time[向材质添加经历时间]，TwoSidedSign[双面符号：适合在双面定制照明材质的背面翻转法线]，
			VertexColor,ViewProperty[视图属性，依赖于视图的常量属性]，PrecomputedAOMask[预先计算的AO蒙版]，
		坐标材质表达式
			ActorPositionWS[输出向量3数据],CameraPositionWS[表达式输出一个三通道向量值]，LightmapUVs[光照贴图UV]，ObjectOrientation[输出对象的世界场景向上向量]，
			ObjectPositionWS[输出对象边界的世界场景空间中心位置]，ObjectRadius[输出对象以Unreal单位计的半径值]，Panner[平移]，粒子位置WS[单独粒子位置的数据]，
			PixelNormalWS[根据当前法线输出向量数据]，Rotator[旋转]，SceneTexelSize[场景纹素大小]，ScreenPosition[屏幕位置]，TextureCoordinate[纹理坐标]，
			VertexNormalWS[输出世界场景空间顶点法线]，VertexTangentWS[输出世界空间的顶点切线]，ViewSize[视图大小]，WorldPosition[全局位置]
		自定义材质表达式
			允许使用自定义着色器代码的表达式：
			输入数组中添加输入，在代码(Code)属性字段中输入或粘贴HLSL代码；
			输入参数限于函数本地->使用HLSLcc编译器时的语法错误：新的DIrectXShaderCompiler(DXC)上；
			警告：{使用自定义节点会组织常量折叠，与使用内置节点实现的等效版本相比，可能会大幅增加所使用的指令；写入自定义节点的着色器代码必须为有效的HLSL}
		深度材质表达式
			DepthFade(深度消退)：表达式用来隐藏半透明对象与不透明对象相交时出现的不美观接缝；
			PiexelDepth：
			SceneDepth：场景深度
		字体材质表达式
			FontSample：字体取样：：：：允许你以常规2D纹理形式，从字体资源中取得纹理页面样本，字体的阿尔法通道将包含字体轮廓值；
			FontSampleParameter：字体取样参数，表达式提供了一种在材质实例常量中公开基于字体的参数方法；
		材质函数表达式
			FunctionInput：函数输入表达式能放在材质函数中，用于在该函数中定义该函数的某个输入----此节点与材质函数配合使用
			FunctionOutput：在某个材质函数中，用于在该函数中定义该函数的某个输出；
			MaterialFunctionCall：允许使用来自另一个材质或函数的外部材质函数；
			StaticBool: 表达式用来为函数内的静态布尔函数输入提供默认布尔值
			StaticSwitch：表达式的工作方式与StaticSwitchParameter(静态开关参数)
			TextureObject：纹理对象表达式，用来为函数内的纹理函数输入提供默认纹理，此节点不会对该纹理进行实际取样，需与TextureSample节点配合使用
		地形材质表达式
			LandscapLayerBlend:将多个纹理或材质网络混合在一起，以便用作地形图层
				混合图层：使用特定组合的图层混合模式时(LB_HeightBlend可能会同时使得高度值设置为0，因此所有混合因子将变为0)；该值不仅无效，还会导致光照发生渲染问题；将LB_AlphaBlend用于某个图层；
			LandscapeLayerCoords:节点将生成UV坐标，用于将材质网络映射到地形地貌：
			LandsscapeLayerSwitch:在特性图层不作用于地形的某个区域时排除某些材质运算，在特定图层的权重为零时删除不必要的计算，从而优化材质；
			LandscapeLayerWeight:允许材质网络根据地形材质获取的关联图层的权重来混和，此图层的权重作用于混合两个输入网络的alpha值；
			LandscapeVisibilityMask:节点会删除地形的可见部分
		材质属性表达式
			建立材质属性：
			设置材质属性：表达式和建立材质属性的功能一样
			中断材质属性：表达式可以切分输入的一组材质属性，并将每个属性在单独的引脚输出
			获取材质属性：与中断材质属性相同，但是有很多工作流程上的好处
			混合材质属性：使用两组材质属性，并且用Alpha输入中定义的像素级别操作来将其混合一起
		数学类材质表达式
			Abs、Add、AppendVector、Arccosine、ArccosineFast、Arcsine、ArcsineFast、Arctangent[Fast]、Arctangent2[Fast]、Ceil[表达式接受值：Floor，Frac]
			Clamp[约束到最大值和最小值范围内]、ComponentMask、Cosine、CrossProduct、Divide[第一个输入除以第二个输入]、DotProduct、Floor、Fmod、Frac[接受输出这些值的小数部分]、
			If[比较两个输入]、LinearInterpolate[线性插值]、Logarithm10/2、Max(输出较大的一个值)、Min、Multiply、Normalize、OneMinus[1-x]、Power、Round、Saturate、Step[为x返回一个0/1，依据究竟大于还是小于Y的参考值]、SmoothStep[允许再0-1之间进行插值，且设置最小和最大阈值]、
			Sign、Sine、SquareRoot、Subtract、Tangent[输出指定值的正切值]、Truncate[通过丢弃小数部分而保留整数部分来截断值]
		材质参数表达式
			向材质实例公开属性，以便再子实例中重载或者再运行时修改
		粒子材质表达式
			动态参数、粒子颜色、粒子方向、ParticleMacroUV、粒子动态模糊淡出、粒子位置WS、粒子半径、粒子相对时间、粒子大小、粒子速度、球形粒子不透明度、
			ParticleSubUV,TextureSampleParameterSubUV,
		纹理材质表达式：对纹理进行取样和输出的表达式
			FontSample、FontSampleParamters{字体取样参数}、SceneColor、SpriteTextureSampler、TextureObject、TextureSample、TextureProperty、ParticleSubUV、
			TextureObjectParameter{纹理对象参数}、TextureSampleParameter2D{纹理取样参数2D}、TextureSampleParamterSubUV、TextureSampleParameterCube
		工具类材质表达式
			抗锯齿纹理遮罩、黑体、凹凸贴图偏移、常量偏差比例、DDX、DDY、深度消退、景深函数、去饱和度、距离、距离场梯度、与最近表面的距离、功能级别开关、菲涅尔、GI替换、光照系统替换、
			线性插值、噪点、上一帧开关、质量开关、绕轴旋转、球体遮罩、薄半透明、向量噪点、
		向量类材质表达式{用于输出位置、法线等向量值的材质表达式}
			ActorPositionWS、CameraPositionWS、CameraVectorWS、Constantl2Vector、Constant3Vector、Constant4Vector、LightVector、对象边界、ObjectOrientation、ObjectPositionWS、
			粒子位置WS、PixelNormalWS、预蒙皮局部法线、预蒙皮局部位置、ReflectionVectorWS、VectorNormalWS、向量噪点、
		向量操作类材质表达式{对向量输入值执行操作的材质表达式}
			AppendVector、ComponentMask、CrossProduct、DeriveNormalZ、DotProduct、Normalize、Transform、TransformPosition
	Substrate材质
		Substrate材质：取代了原有的固定类型的着色模型和混合模式：：：：Default Lit & Clear Coat
		材质概述：摒弃了原有固定着色模型和混合模式的思路(默认光照和透明涂层)、替换为表现力更强、更为模块化的框架；；Substrate的材质依赖“物质Slab(slab of matter)”概念，一种由具体明确单位的物理量参数化的原则性BSDF表示
		Substrate Coverage Weight
		Substrate Vertical Layer
		Substrate构建块节点{额外节点、辅助节点}
		Substrate统计面板数据、使用运算符进行参数混合、金属度和高光度响应(非金属度和参数化)、粗糙折射、次表面散射和参与介质、Substrate调试视图模式
		局限性和已知问题----
	材质教程
		UV坐标动画：UV坐标动画、“Panner”节点明细、如何在材质中使用动画UV坐标
		使用凹凸贴图偏移{视差贴图、在材质中使用凹凸贴图偏移节点指南}
			对深度的描绘：
			Bump Offset----  可能会不真实
		将双法线用于透明涂层：在透明图层材质中使用双法线贴图的指南
			第二发现贴图用于透明涂层的表面{透明涂层着色模型}
		使用彩色半透明阴影
			半透明阴影颜色
			与各种光照系统的兼容性
			在UE5中禁用Lumen
			光照设置->材质设置->构建光照->阴影锐度->材质变体{不透明度和阴影饱和度、遮罩不透明度、使用路径追踪器的彩色阴影、}->
		贴花：网络体贴花
			网格体贴花：是半透明混合模式和延迟贴花的混搭，它们并不渲染在深度中；不同于遮罩材质，Early-Z不存在开销
		添加细节纹理
			细节纹理化：在原始漫反射和法线纹理上叠加高度重复的漫反射和法线纹理，产生纹理包含更多细节的视觉效果
			细节纹理话节点明细：提供纹理输入
			将纹理采样转换为纹理对象：要用作细节纹理的纹理从常规纹理转换为纹理对象
			如何在材质中使用细节纹理化功能
			使用“细节纹理化”材质函数
			细节纹理化提示与技巧{https://docs.unrealengine.com/5.3/zh-CN/adding-detail-textures-to-unreal-engine-materials/}
		使用自发光材质输入
			自发光光照：自发光颜色、泛光效果
			光照和无光照自发光材质：光照和无光照着色模型
				创建完全自发光模型
				创建带遮罩的自发光材质
			自发光材质和流明
			自发光材质与静态光照
			自发光影响和泛光
			间接光照的多次反弹
		在材质中使用菲涅尔
			使用菲涅尔材质节点{边沿光照或边缘光照，原理是通过添加额外光源来帮助区分角色轮廓与背景}
			菲涅尔：根据视角的变化以不同的强度反射
			菲涅尔节点细目
			菲涅尔材质表达式
			菲涅尔材质函数
			在材质中使用菲涅尔：{Fresnel Falloff}
			菲涅尔和法线贴图：：：：使用法线贴图影响菲涅尔效果在材质中的分布；
		创建人体皮肤： https://docs.unrealengine.com/5.3/zh-CN/creating-human-skin-in-unreal-engine/
			通过蓝图：可获得人体皮肤的实现算法
		使用纹理遮罩：：：：是灰阶纹理
			限制材质内的效果区域，Alpha通道、猝倒读、金属感、环境光遮蔽(AO)
			自发光遮罩
			材质遮罩
			遮罩提示和技巧{纹理这招和材质分离、遮罩和通道瑕疵、sRGB和遮罩纹理}
		径向动态模糊
			MI_RadialMotionBlur
		使用折射
			折射率（IOR）、折射与法线贴图、折射和移动
		创建有光泽的材质
			光泽度、粗糙度和光泽度、金属感和光泽度、高光度和光泽度、
		在材质中使用透明度
		在材质中使用次表面轮廓
		在材质中使用次表面散射
	环境法线贴图
		1、有助于减少照明构建之后发生的漏光
		2、环境法线和AO结合使用，改善漫反射间接照明：近乎GI，将环境法线代替法线用于间接照明
		反射遮蔽
	不基于切线空间的凹凸贴图
		1、ddx和ddy
		2、凹凸贴图材质函数
			ComputeFilterWidth
			PerturbNormalLQ
			PerturbNormalHQ
			PreparePerturbNormalHQ
			单个函数替代三个函数
			使用纹理：：：：程序化着色器对性能的消耗较大，且难以消除锯齿，提供了perlin noise，可通过此材质表现进行优化，工作量较大
	材质曲线图集
		曲线线性资颜色资源：用于存储插值RGBA点
		曲线图集资源
		将曲线图集与曹植搭配使用
		通过蓝图访问曲线图集
	光照半透明
		对半透明表面施以光照，并投射包括自身阴影在内的阴影
		半透明效果通常可以归为几类：体积类、稠密到足以具备法线信息的体积类，以及表面类；每类都需要不同的光照技术
		https://docs.unrealengine.com/5.3/zh-CN/lit-translucency-in-unreal-engine/
	自定义UV
		自定义UV贴图
	材质分析器
		开发者工具，帮助你识别和分析项目中的所有材质或材质实例
	使用像素法线偏移实现折射
		材质中的像素法线偏移以及折射模式
		折射率：像素法线偏移----物理和非物理折射模型
		https://docs.unrealengine.com/5.3/zh-CN/refraction-using-pixel-normal-offset-in-unreal-engine/
		像素法线偏移和玻璃：
	在材质中按图元存储自定义数据
		https://docs.unrealengine.com/5.3/zh-CN/storing-custom-data-in-unreal-engine-materials-per-primitive/
渲染路径支持的功能：桌面和桌面XR
	UE5常见渲染功能快速参考
	后期处理{https://docs.unrealengine.com/5.3/zh-CN/supported-features-by-rendering-path-for-desktop-with-unreal-engine/；
	镜头、颜色分级、胶片、后期处理全局光照、后期处理反射、渲染功能、胶片噪点；
	引擎功能：抗锯齿、系统和工具功能、细节层级、可见度和遮蔽剔除、光照功能、环境光照和效果、全局光照、阴影、反射、固定光照、可移动光照、}